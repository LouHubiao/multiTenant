using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using sqlHelper;
using System.Data;
using System.Data.SqlClient;

/// <summary>
/// DBController 的摘要说明
/// </summary>
namespace dbController
{
    public class DBController
    {
        /// <summary>
        /// 获取租户Id
        /// </summary>
        /// <param name="DBName">数据库名</param>
        /// <param name="fieldName">用户名的字段名</param>
        /// <param name="filedVaule">用户名的值</param>
        /// <param name="selectName">租户id的类型</param>
        /// <returns></returns>
        public static string GetUserId(string DBName, string fieldName, string filedVaule, string selectName)
        {
            string userId = null;
            string sqlStr = "SELECT " + selectName + " FROM " + DBName + " WHERE " + fieldName + "=" + filedVaule;
            SqlDataReader userIdReader = SQLHelper.ExecuteReader(sqlStr);
            if (userIdReader.Read())
            {
                userId = userIdReader[fieldName].ToString();
            }
            return userId;
        }

        /// <summary>
        /// 获取数据库列名
        /// </summary>
        /// <param name="DBName">数据库名</param>
        /// <returns></returns>
        public static List<string> GetHeadFromDB(string DBName)
        {
            List<string> heads = new List<string>();
            string sqlStr = "SELECT name FROM syscolumns where id=object_id(N'" + DBName + "')";
            DataTable headTable = SQLHelper.ExecuteDt(sqlStr);
            foreach (DataRow aRow in headTable.Rows)
            {
                heads.Add(aRow["name"].ToString());
            }
            if (heads.Count == 0)
                System.Diagnostics.Debug.Write("GetHeadFromDB:heads.Count == 0");
            return heads;
        }

        /// <summary>
        /// 获取数据库数据
        /// </summary>
        /// <param name="DBName">数据库名</param>
        /// <param name="PK_name">主键名</param>
        /// <param name="PK_value">主键值</param>
        /// <returns></returns>
        public static DataTable GetDataFromDB(string DBName, string PK_name, string PK_value)
        {
            string sqlStr = "SELECT * FROM " + DBName + " WHERE " + PK_name + "=" + PK_value;
            DataTable DBTable = SQLHelper.ExecuteDt(sqlStr);
            return DBTable;
        }
    }
}